-- Встроенные фунции mysql
/* Строковые функции */
ASCII(str string) // Возвращает ASCII-код первого левого символа строки str. Возвращает 0, если строка str пустая. Возвращает NULL, если строка str не существует.
BIN(int integer) // Возвращает двоичное значение аргумента int. Аналогично действию CONV(int,10,2). Возвращает NULL, если аргумент int  NULL.
CHAR(int integer, ...) // Возвращает строку символов определенных кодом/кодами ASCII. Значение NULL пропускается.
CHARACTER_LENGTH(str string) // Функции возвращают длину строки str.
CHAR_LENGTH(str string) // Функции возвращают длину строки str. Поддерживает многобайтовые символы.
CONCAT(str1 string, str2 string,...) // Объединяет строки Результатом является строка из состоящая из аргументов.  Возвращает NULL, если какой либо из аргументов является  NULL. Может быть более 2 аргументов. Числовые аргументы конвертируются в соответствующие строки.
CONCAT_WS(separator string, str1 string, str2 string,...) // Объединяет строки подобно функции CONCAT(), но с разделителем separator, который всавляется между строк-аргументов. Если separator является NULL, то результат будет NULL. Функция пропускает другие аргументы, если их значение NULL.
CONV(int_or_str integer or string, from_base integer, to_base integer) // Мощная функция для конвертирования числа (int_or_str ) из одной системы исчисления (from_base) в другую систему (to_base). Возвращает NULL, если аргументы NULL. Минимальное значение .._base - 2, максимальное 36.
ELT( N integer, str1 string, str2 string, str3 string,...) // Возвратит str1, если N = 1, str2 если  N = 2, И так далее. Возвратит NULL если N меньше 1 больше количества аргументов.
EXPORT_SET( bits, on string , off string, [separator char, [number_of_bits integer]]) // Возвращает строку, в которой для каждого бита выводится состояние on или off . Разделены состояния separator.
FIELD( str string, str1 string, str2 string, str3 string,...) // Возвратит индекс (номер по порядку) str из списка строк str1, str2, str3, ... . Возвратит 0, если str не найдена в списке.
FIND_IN_SET( str string, strlist string ) // Возвращает значение от 1 до ..., в зависимости от позиции строки str среди строк (подстрок) в строке strlist. Строки (подстроки) в strlist разделены ",". Возвращает 0, если str не найдена среди строк в strlist. Возвращает NULL, если один из аргументов NULL.
HEX(int_or_str string or integer) // Возвращает шестнадцатиричное значение аргумента int_or_string. Аналогично действию CONV(int,10,16). Возвращает NULL, если аргумент int_or_string NULL.
INSERT( str string, pos integer, len integer, newstr string ) // Возвращает строку str, со вставкой подстроки newstr, с позиции pos  строки str и длиной  len символов. Поддерживает многобайтовые символы.
INSTR( str string, substr string) // Возвращает позицию первого вхождения подстроки substr в строке str. Возвращает 0, если substr не найдено в строке str (с учетом позиции, естественно). Поддерживает многобайтовые символы. Аналог LOCATE(), только аргументы поменяны местами.
LCASE( str string ) string // Возвращает строку str, заменив в ней все заглавные буквы на прописные. Поддерживает многобайтовые символы.(По умолчанию ISO-8859-1 Latin1).
LEFT( str string, len integer) // Возвращает len первых символов изи строки str. Поддерживает многобайтовые символы.
LENGTH(str string) // Функции возвращают длину строки str.
LOAD_FILE( file_name string  ) // Читает файл и возвращает его контент в виде строки. file_name является полным путем к файлу на сервере. Необходимо следить за физическим наличием самого файла и соответствующими правами доступа скрипта к нему. Файл должен быть размером не более, чем установлено параметром max_allowed_packet. При возникновении проблем (отсутствие файла и тд.) возвращает NULL.
LOCATE(substr string, str string, pos integer) // LOCATE(substr string, str string) возвращает позицию первого вхождения подстроки substr в строке str. Возвращает 0, если substr не найдено в строке str. LOCATE(substr string, str string, pos integer) возвращает позицию первого вхождения подстроки substr в строке str, но начиная с pos. Возвращает 0, если substr не найдено в строке str (с учетом позиции, естественно). Поддерживает многобайтовые символы.
LOWER( str string ) // Возвращает строку str, заменив в ней все заглавные буквы на прописные. Поддерживает многобайтовые символы.(По умолчанию ISO-8859-1 Latin1).
LPAD( str string, len integer, padstr string) // Возвращает строку str, добавив к началу str строку padstr и приведя общее количество символов в возвращенной строке к len. Если  len больше, чем сумма длин строк, то разница за счет повторения строки padstr.
LTRIM( str string ) // Возвращает строку str, удалив пробелы с начала строки. Поддерживает многобайтовые символы.
MAKE_SET( bits, str1 string , str2 string ,...) // Возвращает одну из строк-аргументов в зависимости от побитового состояния bits. str1 возвратится при bit 0, str2 при bit 1, и так далее.
MID(str string, pos integer, len integer) // Возвращает подстроку строки str длиною len символов с позиции pos. Поддерживает многобайтовые символы. Вариант с "FROM " используется в синтаксисе ANSI SQL92. В функции SUBSTRING() если не указан аргумент len,  то возвращает всю подстроку строки str с позиции pos.
OCT(int integer) // Возвращает восьмиричное значение аргумента int. Аналогично действию CONV(int,10,8). Возвращает NULL, если аргумент int  NULL.
OCTET_LENGTH(str string) // Функции возвращают длину строки str.
LOCATE(substr string, str string) // LOCATE(substr string, str string) возвращает позицию первого вхождения подстроки substr в строке str. Возвращает 0, если substr не найдено в строке str. LOCATE(substr string, str string, pos integer) возвращает позицию первого вхождения подстроки substr в строке str, но начиная с pos. Возвращает 0, если substr не найдено в строке str (с учетом позиции, естественно). Поддерживает многобайтовые символы.
ORD(str string) // В случае, если первый левый символ строки str является многобайтовым, возвращает его код в формате: ((первый байт ASCII- код)*256+(второй байт ASCII -код))[*256+третий байт ASCII -код...]. Если первый левый символ строки str не является многобайтовым, то действие аналогично действию функции ASCII() - возвращает ASCII-код первого левого символа строки str.
POSITION(substr string IN str string) // Возвращает позицию первого вхождения подстроки substr в строке str. Возвращает 0, если substr не найдено в строке str. Поддерживает многобайтовые символы.
REPLACE( str string, from_str string, to_str string) // Возвращает строку str, заменив в ней все подстроки from_str на to_str. Поддерживает многобайтовые символы.
REPEAT( str string, count integer) // Возвращает строку, состоящую из  count  раз повтореной строки str. Возвратит  NULL если один из аргументов NULL.
REVERSE( str string ) // Возвращает строку, в которой все символы с последнего на первый. См. пример. Поддерживает многобайтовые символы.
RIGHT( str string, len integer) // Возвращает len последних символов изи строки str. Поддерживает многобайтовые символы.
RPAD( str string, len integer, padstr string) // Возвращает строку str, добавив к концу str строку padstr и приведя общее количество символов в возвращенной строке к len. Если  len больше, чем сумма длин строк, то разница за счет повторения строки padstr.
RTRIM( str string ) // Возвращает строку str, удалив пробелы с конца строки. Поддерживает многобайтовые символы.
SOUNDEX( str string ) // Вычисляет soundex ключ для str. Ключ soundex имеет такое свойство, что слова, произносимые одинакого, имеют одинаковый soundex ключ, и это может быть использовано для корректировки результатов поиска. Возвращает строку длиной 4 символа, начинающуюся буквой A-Z.
SPACE( N integer ) // Возвращает строку состоящую из N пробелов.
SUBSTRING(str string FROM pos integer FOR len integer) // Возвращает подстроку строки str длиною len символов с позиции pos. Поддерживает многобайтовые символы. Вариант с "FROM " используется в синтаксисе ANSI SQL92. В функции SUBSTRING() если не указан аргумент len,  то возвращает всю подстроку строки str с позиции pos.
SUBSTRING_INDEX( str string, delim string, count integer) // Возвращает всю подстроку строки str с позиции определенной разделителем delim, находящимся по счету count.
TRIM( [[BOTH | LEADING | TRAILING] [remstr] string FROM] str string ) // С одним аргументом "str"  - возвращает строку str, удалив пробелы с конца строки. Аргумент "remstr" определяет символ/подстроку для удаления. Поддерживает многобайтовые символы. mysql> select TRIM(' bar '); -> 'bar'
UCASE( str string ) // Возвращает строку str, заменив в ней все прописные буквы на заглавные. Поддерживает многобайтовые символы.(По умолчанию ISO-8859-1 Latin1).
UPPER( str string ) // Возвращает строку str, заменив в ней все прописные буквы на заглавные. Поддерживает многобайтовые символы.(По умолчанию ISO-8859-1 Latin1).

Любая строковая функция возвратит NULL, если строка результата превышает длину, установленную параметром сервера max_allowed_packet.

Источник с примерами: http://www.mysql.ru/docs/maryan/

/**/
RAND() //